#include<stdio.h>
#include<cmath>
#include<stdlib.h>
#include<stdint.h>

struct node
{
	int data;
	struct node *next;
};

typedef struct node ll_node;


int main()
{
	ll_node *node1, *head;
	long int addr_array[5] = { NULL };
		//node1 = (ll_node*)malloc(sizeof(int));
		//head = node1;
	int d;
	printf("Enter the no. of data required\n");
	scanf("%d", &d);

	int i = 0;
	for (i = 0; i < d; i++)
	{
		if (i == 0)
		{
			head = (ll_node*)malloc(sizeof(int));
			addr_array[i] =(int)head;
			node1 = head;
			scanf("%d", &head->data);
		}
		else {
			head->next = (ll_node*)malloc(sizeof(int));
			addr_array[i] = (long)head;
			head = head->next;
			head->data = NULL;
			scanf("%d", &head->data);
		}
		

	}
	head->next = (node *)addr_array[3];
	//head->data = NULL;
	head = node1;
	node* address1;
	int pos;

	while ((head) != NULL)
	{
		
		//check for circular LL
		static int i = 0;
		for (int j = 0; j < i; j++)
		{
			if (head->next == (node*)addr_array[j])
			{
				address1 = head->next;
				pos = j;
				
				head->next = NULL;
			}
		}
		i++;


		printf("%d ", head->data);
		head = head->next;
	}
	printf("\n");
	printf("cyclicity detected at postion %d - (address) %p \n", pos, address1);
	printf("Cyclicity has been resolved\n");
	
}